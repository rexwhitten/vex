<Version>1.0.1</Version>

<ProgrammingBlock type="comment" commented="1">autonumous code scout 1</ProgrammingBlock>

<ProgrammingBlock type="comment" commented="1"></ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="forward">
    <Parameters>
        <Parameter name="quantity" type="float" default="1">20</Parameter>
        <Parameter name="unitType" type="base typedef" default="rotations" typeDef="tMovementUnits">seconds</Parameter>
        <Parameter name="speed" type="short" default="50">55</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">Write a comment</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="turnLeft">
    <Parameters>
        <Parameter name="quantity" type="float" default="1">90</Parameter>
        <Parameter name="unitType" type="base typedef" default="rotations" typeDef="tMovementUnits">degrees</Parameter>
        <Parameter name="speed" type="short" default="50">40</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="comment">Pushing the Bounus Rack</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="backward">
    <Parameters>
        <Parameter name="quantity" type="float" default="1">4</Parameter>
        <Parameter name="unitType" type="base typedef" default="rotations" typeDef="tMovementUnits">seconds</Parameter>
        <Parameter name="speed" type="short" default="50">45</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="loop" loopType="RepeatForever"/>

<ProgrammingBlock type="functionCall" function="forward">
    <Parameters>
        <Parameter name="quantity" type="float" default="1">1</Parameter>
        <Parameter name="unitType" type="base typedef" default="rotations" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short" default="50">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="end"/>

<ProgrammingBlock type="comment">pushing out (3 points)</ProgrammingBlock>

<ProgrammingBlock type="loop" loopType="RepeatForever"/>

<ProgrammingBlock type="functionCall" function="forward">
    <Parameters>
        <Parameter name="quantity" type="float" default="1">1</Parameter>
        <Parameter name="unitType" type="base typedef" default="rotations" typeDef="tMovementUnits">seconds</Parameter>
        <Parameter name="speed" type="short" default="50">15</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="backward">
    <Parameters>
        <Parameter name="quantity" type="float" default="1">1</Parameter>
        <Parameter name="unitType" type="base typedef" default="rotations" typeDef="tMovementUnits">seconds</Parameter>
        <Parameter name="speed" type="short" default="50">10</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="forward">
    <Parameters>
        <Parameter name="quantity" type="float" default="1">1</Parameter>
        <Parameter name="unitType" type="base typedef" default="rotations" typeDef="tMovementUnits">seconds</Parameter>
        <Parameter name="speed" type="short" default="50">20</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="turnLeft">
    <Parameters>
        <Parameter name="quantity" type="float" default="1">1</Parameter>
        <Parameter name="unitType" type="base typedef" default="rotations" typeDef="tMovementUnits">degrees</Parameter>
        <Parameter name="speed" type="short" default="50">95</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="end"/>

<RobotConfiguration>#pragma config(Sensor, port4,  gyroSensor,     sensorVexIQ_Gyro)
#pragma config(Motor,  motor1,          leftMotor,     tmotorVexIQ, openLoop, reversed, driveLeft, encoder)
#pragma config(Motor,  motor3,          middlemotor,   tmotorVexIQ, PIDControl, encoder)
#pragma config(Motor,  motor5,          armmotor,      tmotorVexIQ, PIDControl, encoder)
#pragma config(Motor,  motor10,         armMotor,      tmotorVexIQ, openLoop, encoder)
#pragma config(Motor,  motor11,         clawMotor,     tmotorNone, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
</RobotConfiguration>

<CSource>#pragma config(Sensor, port4,  gyroSensor,     sensorVexIQ_Gyro)
#pragma config(Motor,  motor1,          leftMotor,     tmotorVexIQ, openLoop, reversed, driveLeft, encoder)
#pragma config(Motor,  motor3,          middlemotor,   tmotorVexIQ, PIDControl, encoder)
#pragma config(Motor,  motor5,          armmotor,      tmotorVexIQ, PIDControl, encoder)
#pragma config(Motor,  motor10,         armMotor,      tmotorVexIQ, openLoop, encoder)
#pragma config(Motor,  motor11,         clawMotor,     tmotorNone, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//


task main()
{
	//// autonumous code scout 1
	//// 
	forward(20, seconds, 55);
	// Write a comment
	turnLeft(90, degrees, 40);
	// Pushing the Bounus Rack
	backward(4, seconds, 45);
	repeat (forever) {
		forward(1, rotations, 50);
	}
	// pushing out (3 points)
	repeat (forever) {
		forward(1, seconds, 15);
		backward(1, seconds, 10);
		forward(1, seconds, 20);
		turnLeft(1, degrees, 95);
	}
}
</CSource>
